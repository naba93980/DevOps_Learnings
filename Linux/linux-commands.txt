termial emulator is a program allow us to use termial in a graphical way
    windows - putty
shell in linux in CLI that takes all my input and interprets and tells the OS what to do - eg. cshell zsh etc.

part of the termial where i write the input is command promt


commands: - commands are just executable files that run when the command is called.

1. whereis exefilename - for finding location of the executable file.
2. ls - list all file folder in the director
3. mkdir - create a new folder
4. cd folder/subfolder/destinationfolder/  - change directory for entering in subsubfolder
5. cd .. - to move back one folder
6. cd foldername/- moves to front directory
    cd - moves to home directory
    cd ../folder/ - enter the folder present in the last back folder 
    cd //mnt/d/folder/subfolder/ -  inside the (/)base folder then mount folder then folder then subfolder 
7. open - opens the file or folder whose name is mentioned using path environment variable

WHEN WE ENETER A COMMAND TO CALL A EXECUTABLE FILE, LIKE git, LINUX CHECKS THE PATH ENVIRONMENT VARIABLES 
TO FIND THE LOCATION OF THAT EXECUTABLE AND THEN EXECUTES THE COMMANDS BY RUNNING THAT EXECUTABLE FILE

8. ls -a - enlist the whole list of the current directory including the hidden files, . means present directory, .. means past directory
    ls subfolder - show all files and folders present in the subfolder
    ls subfolder -R - show all files and subfolders and files in the subfolders
9. apt list --installed - list all installed packages on Ubuntu
10. cat file1 - diplay file
    cat file1 file2 - display contents of both file1 and file2
    cat > filename - creates file and opens it to let us write something
    cat file1 file2 > file3 - copies content of both file1 and file2 to file3.
11. pwd - present working directory
12. ls -l - shows files and folder with permissions
    ls -R - shows files and folder present folder and sub folders as well 
13. echo " " - writes something in termial/output
    echo  " " > file - prints something in file overriding its contents
14. man command - gives description of the command
15.  | - tunnel - output of first command going to be the input of the secon command 
    > - redirection - redirect the output to the file.
16. tr -  translate or delete characters
17. cat file | tr set1 set2 - tr accepts two sets of characters, usually with the same length, and replaces the characters of the first sets with the corresponding characters from the second set. A SET is basically a string of characters.
    eg. cat my2.txt | tr 'a-z' 'A-Z' > upper.txt - output of cat becomes input of tr and output of tr gets redirected to upper.txt file
18. mkdir folder1 - creates a folder1 
    mkdir folder1/subfolder1 - creates a subfolder1 inside folder1
    mkdir -p folder1/middlesub/subfolder1 - creates a middlefolder inside folder  then creates a subfolder inside middlefolder
19. touch filename - creates a file in the pwd
20. cp file1 file1copy - creats a copy file1copy of file1
21. mv source target - moving source file or folder to target folder/file( it removes the source file and puts its content/creates target file)
22. rm file - permanently remove the files
23. rm -rf file - permanently remove a file
24. rm -R folder - permanently remove a folder
25. cp -R source target - copies source folder including subfolders to target folder.
26. whoami - displays current users
27. whereis - location of the script executable binaries
28. id -u  - if 0 indicates root user, if !==0 means non-root user
29. sudo su -   - switch to root user
30. sudo su - username - switch to user 'username'
31. df(disk free) -g - show drive capacity and all info in gigabyte
32. du(disk usage) - show size of entire directory
      du -a - show size of entire directory recursively
      du -a -h - show size of entire directory recursively in MB
      du -a -l - show size of entire directory recursively in KB
33. head/tail - shows first/last 10 lines
	head -n filename -> n represents number of lines to be displayed.
	tail -n filename -> n represents number of lines to be displayed.
34. grep MemTotal /proc/meminfo - check total RAM.
35. diff file1 file2 - print the lines which doesnot match in both the files.
35. locate filename/pattern - locate file path.
36. find . - find everything in present directory.
37. find .. - find everything in past directory.
38. find directoryname - find everything in 'directoryname' directory.
39. find . -type d - find all directories in . directory.
40. find . -type f - find all diredctories in . directory.
41. find . -type f -name "*.txt" - show all files having .txt in name
42. find . -perm u=rwx,g=rwx,o=rwx.
43. find . -type f -name "*.txt"
44. find . -type f -name "*.txt" -exec rm -rf {} +   -> find files of type .txt and execute rm -rf on each .txt

45. chmod - modify permissions
	chmod u+x fine1.txt -> add execute permission to owner.
	chmod u=x,g=x,o=wx fine1.txt -> user,group has execute, others has write, execute permissions.
46. chown - command is used to change the file Owner or group.
	chown [OPTION] [OWNER][:[GROUP]] FILE
	chown [OPTION] â€“reference=RFILE FILE
	-c option Reports when a file change is made
	chown --from=nabajyotimodak root fine1.txt -> change owner permission from nabajyotimodak to root.
	chown --from=:nabajyotimodak root fine1.txt -> change group permission from nabajyotimodak to root.

47. grep -> find something on a file from an expression.
	grep -w "abc def" filename. ->w -> entire word
	grep -n "abc" filename -> line no where abc is found.
	grep -r "abc" folder -> search recursively in folder.
	grep -i "abc" filename -> i means case insensitive
	     -l -> list all files 
	     -c -> count all files
48. history -> history of all commands 
	history | grep "ls"
49. alias -> alias present in the system.

shortcuts : 
tab for autocompletion
ctrl+A for moving to the first of the command.
ctrl+E for moving to the last of the command.
ctrl+k for removing everything after the cursor.
ctrl+u for removing everything entire command section present before the cursor.

50. !historyNumber -> run command at 'historyNumber' number in history file
51. sort filename -> sorts contents of filename file.
	-f - case insensitive
	-n - in numerical order
	-r - reverse order
52. jobs Command : command that is used to list the jobs that you are running in the background and in the foreground.
53. wget -o filename link : download any file from internet.
54. zip zipName filename1 filename2 ... -> creates a zip having name as zipName.
    unzip zipname -> unzip
55. hostname - displays names of current host system
	hostname -i - didplays ip of current host system
56. adduser userName -> add another user in the system, find it in home/userName/
57. passwd userName -> set password for the userName
58. userdel -f username -> force delete 'username' user.
59. kill -9 <pid> - kill a process with id 'pid'.
60. OS info - 
	uname - kernel name
	uname -o -> type of kernel
	uname -r -> kernel version
	uname -m -> architecture
	etc/os-release contains all os related info
69. lscpu - all cpu related info.
70. free - memory info.
71. vmstat - virtual memory info
72. usermod -a -G groupname user -> execute this command as root to add any user to a particular group like sudo,adm etc
73. id - print userId, groupId
	-u -> user id
	-g -> group id
74. getent - collects data from the defined administrative database.
	getent group -> get info about groups
	getent passwd <user> -> get password about user 'user'







